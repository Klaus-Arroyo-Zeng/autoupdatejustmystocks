proxy-providers:
  justmystocks:
    type: http
    url: "https://raw.githubusercontent.com/Klaus-Arroyo-Zeng/autoupdatejustmystocks/refs/heads/main/config"
    path: ./justmystocks.yaml
    #更新间隔单位是秒
    interval: 3600
    #是否用代理更新
    proxy: DIRECT
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
      timeout: 3000
      lazy: true
proxies:
  # - {name: 直连, type: direct}
  # - {name: 拒绝, type: reject}
port: 7890
allow-lan: false
mode: rule
log-level: info
unified-delay: true
tcp-concurrent: true
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "zashboard"
external-ui-name: zashboard
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip" #从 GitHub Pages 分支获取


# 嗅探
# sniffer:
#   enable: true
#   sniff:
#     HTTP:
#       ports: [80, 8080-8880]
#       override-destination: true
#     TLS:
#       ports: [443, 8443]
#     QUIC:
#       ports: [443, 8443]
#   force-domain:
#     - "+.v2ex.com"
#   skip-domain:
#     - "+.baidu.com"

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-detect-interface: true
  ipv6: false
  auto-route: true
  auto-redirect: true
  
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29

pr: &pr {type: select, proxies: [默认代理, 美国自动, 自动选择, 美国节点,  全部节点, DIRECT]}

proxy-groups:
  - {name: 默认代理, type: select, proxies: [自动选择, 美国自动,  美国节点,  全部节点, DIRECT]}
  # - {name: YouTube, <<: *pr}
  # - {name: Google, <<: *pr}
  # - {name: ChatGPT, <<: *pr}
  - {name: GitHub, <<: *pr}
  - {name: OneDrive, <<: *pr}
  - {name: Microsoft, <<: *pr}
  - {name: TikTok, type: url-test, use: [justmystocks], tolerance: 20, interval: 300, filter: "(?=.*(US|USA)).*(TK)|链式.*$"}
  # - {name: Telegram, <<: *pr}
  # - {name: NETFLIX, <<: *pr}
  # - {name: Speedtest, <<: *pr}
  # - {name: PayPal, <<: *pr}
  # - {name: Apple, type: select, proxies: [DIRECT, 默认代理]}
  # - {name: 直连, type: select, proxies: [直连, 默认代理]}
  - {name: 漏网之鱼, <<: *pr}
  - {name: 香港节点, type: select, use: [justmystocks], filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 日本节点, type: select, use: [justmystocks], filter: "(?i)日|jp|japan"}
  - {name: 美国节点, type: select, use: [justmystocks], filter: "(?i)美|us|unitedstates|united states"}
  # - {name: 香港故转, type: fallback, use: [justmystocks], tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  # - {name: 日本故转, type: fallback, use: [justmystocks], tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 香港自动, type: url-test, use: [justmystocks], tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: 日本自动, type: url-test, use: [justmystocks], tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 美国自动, type: url-test, use: [justmystocks], tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}
  - {name: 自动选择, type: url-test, use: [justmystocks], tolerance: 20, interval: 300, filter: "^((?!(DIRECT)).)*$"}
  - {name: 全部节点, type: select, use: [justmystocks]}

# - name: 节点选择
#   type: select
#   proxies:
#   - 自动选择
#   - 手动选择
#   - DIRECT

# - name: 自动选择
#   type: url-test
#   url: https://www.google.com/generate_204
#   interval: 300
#   tolerance: 100
#   proxies:
#   use:
#     - justmystocks

# - name: 手动选择
#   type: select
#   proxies:
#   use:
#     - justmystocks

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - RULE-SET,adguard_domain, REJECT
  - RULE-SET,ads_domain, REJECT
  - DOMAIN-SUFFIX,qichiyu.com,默认代理
  # - DOMAIN-SUFFIX,pypi.org,DIRECT
  # - DOMAIN-SUFFIX,files.pythonhosted.org,DIRECT
  - RULE-SET,private_domain,DIRECT
  # - RULE-SET,apple_domain,Apple
  - RULE-SET,proxylite,默认代理
  # - RULE-SET,ai,ChatGPT
  - RULE-SET,github_domain,GitHub
  # - RULE-SET,youtube_domain,YouTube
  # - RULE-SET,google_domain,Google
  # - RULE-SET,onedrive_domain,OneDrive
  - RULE-SET,microsoft_domain,Microsoft
  - RULE-SET,tiktok_domain,TikTok
  # - RULE-SET,speedtest_domain,Speedtest
  # - RULE-SET,telegram_domain,Telegram
  # - RULE-SET,netflix_domain,NETFLIX
  # - RULE-SET,paypal_domain,PayPal
  # - RULE-SET,gfw_domain,默认代理
  # - RULE-SET,geolocation-!cn,默认代理
  - RULE-SET,cn_domain,DIRECT
  # - RULE-SET,google_ip,Google,no-resolve
  # - RULE-SET,netflix_ip,NETFLIX,no-resolve
  # - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,cn_ip,DIRECT
  - MATCH,漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: text}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: text}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers: 
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.list"}
  proxylite: { <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list"}
  # ai: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.list" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.list"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.list"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.list"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.list"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.list"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.list"}
  # onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.list"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.list"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.list"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.list"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.list"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.list"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.list"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.list"}
  ads_domain: { <<: *class, url: "https://raw.githubusercontent.com/Klaus-Arroyo-Zeng/dontknowwhat/refs/heads/main/reject-list.list"}
  adguard_domain: { <<: *domain, url: "https://raw.githubusercontent.com/REIJI007/AdBlock_Rule_For_Clash/main/adblock_reject.txt"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.list"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.list"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.list"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.list"}
